Описание проекта.

○ Обработка ошибок 
    • Ошибки, произошедшие внутри библиотеки логируются.
    • Библиотека не имеет зависимости на конкретный логгер. Реализация логгера и настройки логгера определяются потребителем библиотеки.

○ Описание сеттинга
    • Лектор ведет курс лекций.
    • Студент пришeл на лекцию с домашней работой - получил оценку от 1 до 5.
    • Студент пришел на лекцию без домашней работы - получил 0.
    • Студент пропустил лекцию - получил 0.
    • Отсутствие домашней работы студента не эквивалентно отсутсвтвию на лекции (следует вести посещаемость).

○ Библиотека с бизнес-логикой содержит следующее:
    • Сущности: Лектор, Студент, Лекция, Домашняя работа.
    • CRUD операции для работы с лекциями 
    • CRUD операции для работы с домашними работами 
    • CRUD операции для работы со списком студентов \ лекторов

○ Имплементирован следующий функционал:
    • Генерация репорта о посещаемости, по названию лекции или по имени студента. Отчет поддерживает формат Json. 
      Реализация поддерживает возможность легкой расширяемости под разные форматы репортов.
    • При пропуске студентом более 3х лекций реализована отправка Email на лектора курса и на студента.
    • При достижении текущей средней оценки за курс ниже 4х баллов реализована отправка SMS сообщения студенту.
